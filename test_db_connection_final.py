import os
import sys
from dotenv import load_dotenv
import psycopg2
from psycopg2 import OperationalError

def test_db_connection():
    # Carrega as vari√°veis de ambiente do arquivo .env
    load_dotenv()
    
    # Obt√©m as configura√ß√µes do banco de dados
    db_config = {
        'dbname': os.getenv('DB_NAME', 'apostapro_db'),
        'user': os.getenv('DB_USER', 'apostapro_user'),
        'password': os.getenv('DB_PASSWORD', 'apostapro_pass'),
        'host': os.getenv('DB_HOST', 'localhost'),
        'port': os.getenv('DB_PORT', '5432')
    }
    
    print("üîç Testando conex√£o com o banco de dados...")
    print(f"üìã Configura√ß√µes:")
    for key, value in db_config.items():
        print(f"   {key.upper()}: {value}")
    
    try:
        # Tenta estabelecer uma conex√£o
        conn = psycopg2.connect(**db_config)
        cursor = conn.cursor()
        
        # Executa uma consulta simples para verificar a conex√£o
        cursor.execute("SELECT version();")
        db_version = cursor.fetchone()
        
        print(f"\n‚úÖ Conex√£o bem-sucedida!")
        print(f"   Vers√£o do PostgreSQL: {db_version[0]}")
        
        # Verifica se o banco de dados existe e est√° acess√≠vel
        cursor.execute("SELECT current_database(), current_user;")
        db_info = cursor.fetchone()
        print(f"   Banco de dados atual: {db_info[0]}")
        print(f"   Usu√°rio atual: {db_info[1]}")
        
        # Lista as tabelas existentes
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
            ORDER BY table_name;
        """)
        
        tables = cursor.fetchall()
        print(f"\nüìä Tabelas no banco de dados ({len(tables)}):")
        for i, table in enumerate(tables, 1):
            print(f"   {i}. {table[0]}")
        
        # Fecha a conex√£o
        cursor.close()
        conn.close()
        return True
        
    except OperationalError as e:
        print(f"\n‚ùå Falha na conex√£o com o banco de dados:")
        print(f"   Erro: {e}")
        return False

if __name__ == "__main__":
    print("üîß Script de teste de conex√£o com o banco de dados")
    print("=" * 60)
    
    # Verifica se o m√≥dulo psycopg2 est√° instalado
    try:
        import psycopg2
    except ImportError:
        print("\n‚ùå O m√≥dulo 'psycopg2' n√£o est√° instalado.")
        print("   Instale-o com: pip install psycopg2-binary")
        sys.exit(1)
    
    # Executa o teste de conex√£o
    success = test_db_connection()
    
    print("\n" + "=" * 60)
    if success:
        print("‚úÖ Teste conclu√≠do com sucesso!")
    else:
        print("‚ùå Ocorreram erros durante o teste de conex√£o.")
        print("   Verifique as configura√ß√µes no arquivo .env e certifique-se de que o PostgreSQL est√° rodando.")
    
    sys.exit(0 if success else 1)
