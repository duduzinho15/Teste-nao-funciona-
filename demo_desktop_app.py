#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
DEMO APOSTAPRO DESKTOP APP
==========================

Script de demonstra√ß√£o para testar a nova interface desktop.
Executa a aplica√ß√£o ApostaPro com Flet.

Autor: Sistema ApostaPro
Data: 2025-01-14
"""

import subprocess
import sys
import os
from pathlib import Path

def check_flet_installation():
    """Verifica se o Flet est√° instalado"""
    try:
        import flet
        print("‚úÖ Flet est√° instalado!")
        return True
    except ImportError:
        print("‚ùå Flet n√£o est√° instalado!")
        return False

def install_flet():
    """Instala o Flet se necess√°rio"""
    print("üì¶ Instalando Flet...")
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "flet==0.21.0"])
        print("‚úÖ Flet instalado com sucesso!")
        return True
    except subprocess.CalledProcessError:
        print("‚ùå Erro ao instalar Flet!")
        return False

def run_desktop_app():
    """Executa a aplica√ß√£o desktop"""
    print("üöÄ Iniciando aplica√ß√£o ApostaPro Desktop...")
    
    app_file = Path("apostapro_desktop.py")
    if not app_file.exists():
        print("‚ùå Arquivo apostapro_desktop.py n√£o encontrado!")
        return False
    
    try:
        # Executa a aplica√ß√£o
        subprocess.run([sys.executable, "apostapro_desktop.py"])
        return True
    except KeyboardInterrupt:
        print("\nüõë Aplica√ß√£o interrompida pelo usu√°rio")
        return True
    except Exception as e:
        print(f"‚ùå Erro ao executar aplica√ß√£o: {e}")
        return False

def main():
    """Fun√ß√£o principal"""
    print("üéÆ APOSTAPRO DESKTOP APP - DEMO")
    print("=" * 50)
    
    # Verifica instala√ß√£o do Flet
    if not check_flet_installation():
        print("\nüîß Instalando depend√™ncias...")
        if not install_flet():
            print("‚ùå N√£o foi poss√≠vel instalar o Flet!")
            return
    
    print("\nüì± Caracter√≠sticas da nova interface:")
    print("   ‚Ä¢ Design moderno e minimalista")
    print("   ‚Ä¢ Modos claro e escuro")
    print("   ‚Ä¢ Interface responsiva")
    print("   ‚Ä¢ Controles intuitivos")
    print("   ‚Ä¢ Sistema de logs em tempo real")
    print("   ‚Ä¢ Configura√ß√µes avan√ßadas")
    print("   ‚Ä¢ Estat√≠sticas visuais")
    
    print("\nüéØ Funcionalidades:")
    print("   ‚Ä¢ Iniciar/Parar sistema")
    print("   ‚Ä¢ Monitoramento em tempo real")
    print("   ‚Ä¢ Configura√ß√µes do sistema")
    print("   ‚Ä¢ Visualiza√ß√£o de logs")
    print("   ‚Ä¢ M√©tricas de performance")
    print("   ‚Ä¢ Troca de temas")
    
    print("\nüöÄ Iniciando aplica√ß√£o...")
    print("   ‚Ä¢ Use os bot√µes para controlar o sistema")
    print("   ‚Ä¢ Configure suas prefer√™ncias")
    print("   ‚Ä¢ Monitore os logs em tempo real")
    print("   ‚Ä¢ Teste a troca de temas")
    
    # Executa a aplica√ß√£o
    success = run_desktop_app()
    
    if success:
        print("\n‚úÖ Demo conclu√≠do com sucesso!")
    else:
        print("\n‚ùå Demo falhou!")

if __name__ == "__main__":
    main()
